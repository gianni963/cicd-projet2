name: CI/CD workflow !
on: push
jobs:
  tests-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: install node
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json
      - name: install dependencies
        run: npm ci --prefeer-offline
      - name: run linter
        run: npm run lint
      - name: npm audit
        run: npm audit --audit-level=moderate

  tests-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./node-api
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: install node
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: ./node-api/package-lock.json
      - name: install dependencies
        run: npm ci --prefeer-offline
      - name: run linter
        run: npm run lint
      - name: npm audit
        run: npm audit --audit-level=moderate
      - name: exec unit tests
        run: npm run test:ci
      - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: gianni963/cicd-projet2
            
  build-frontend-and-node-api:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - context_name: ./frontend
          image_name: ghcr.io/gianni963/cicd-projet2/frontend:latest
        - context_name: ./node-api
          image_name: ghcr.io/gianni963/cicd-projet2/node-api:latest
    permissions:
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: setup docker buildx
        uses: docker/setup-buildx-action@v3
      - name: docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image_name }}
      - name: login to github contaner registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context_name }}
          push: true
          tags: ${{ matrix.image_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max



 